version: '3.8'

services:
  user-service-prod:
    image: fitness-club/user-service:prod-1.2
    container_name: user-service-prod
    build:
      context: ../user-service
    networks:
      - fitness-club-net-prod
    expose:
      - "8080"
    depends_on:
      - postgres-prod
      - consul-service-prod
      - config-service-prod
    environment:
      CONSUL_HOST: consul-service-prod
      POSTGRES_URL: jdbc:postgresql://postgres:5432/user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user

  order-service-prod:
    image: fitness-club/order-service:prod-1.2
    container_name: order-service-prod
    build:
      context: ../order-service
    networks:
      - fitness-club-net-prod
    expose:
      - "8081"
    depends_on:
      - postgres-prod
      - consul-service-prod
      - config-service-prod
      - kafka-prod
    environment:
      KAFKA_BROKERS: kafka:29092
      CONSUL_HOST: consul-service-prod
      POSTGRES_URL: jdbc:postgresql://postgres:5432/order_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user

  news-service-prod:
    image: fitness-club/news-service:prod-1.2
    container_name: news-service-prod
    build:
      context: ../news-service
    networks:
      - fitness-club-net-prod
    expose:
      - "8084"
    depends_on:
      - postgres-prod
      - consul-service-prod
      - config-service-prod
      - kafka-prod
    environment:
      KAFKA_BROKERS: kafka:29092
      CONSUL_HOST: consul-service-prod
      POSTGRES_URL: jdbc:postgresql://postgres:5432/news_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user

  auth-service-prod:
    image: fitness-club/auth-service:prod-1.2
    container_name: auth-service-prod
    build:
      context: ../auth-service
    networks:
      - fitness-club-net-prod
    expose:
      - "8082"
    depends_on:
      - consul-service-prod
      - config-service-prod
      - kafka-prod
    environment:
      KAFKA_BROKERS: kafka:29092
      CONSUL_HOST: consul-service-prod

  email-service-prod:
    image: fitness-club/email-service:prod-1.2
    container_name: email-service-prod
    build:
      context: ../email-service
    networks:
      - fitness-club-net-prod
    expose:
      - "8083"
    depends_on:
      - consul-service-prod
      - config-service-prod
      - kafka-prod
    environment:
      KAFKA_BROKERS: kafka:29092
      CONSUL_HOST: consul-service-prod

  config-service-prod:
    image: fitness-club/config-service:prod-1.2
    container_name: config-service-prod
    build:
      context: ../config-server
    networks:
      - fitness-club-net-prod
    expose:
      - "8888"
    depends_on:
      - consul-service-prod
    environment:
      CONSUL_HOST: consul-service-prod

  api-gateway-prod:
    image: fitness-club/api-gateway:prod-1.2
    container_name: api-gateway-prod
    build:
      context: ../api-gateway
    networks:
      - fitness-club-net-prod
    ports:
      - "8765:8765"
    depends_on:
      - consul-service-prod
    environment:
      CONSUL_HOST: consul-service-prod


  postgres-prod:
    image: 'postgres:14.6-alpine'
    container_name: postgres-prod
    restart: always
    networks:
      - fitness-club-net-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data
      - ./db/create-additional-prod-databases-v1.2.sh:/docker-entrypoint-initdb.d/create-additional-prod-databases-v1.2.sh

  consul-service-prod:
    image: bitnami/consul:1.15.0
    container_name: consul-service-prod
    networks:
      - fitness-club-net-prod
    ports:
      - '8500:8500'

  zookeeper-prod:
    image: bitnami/zookeeper:3.8.0
    container_name: zookeeper-prod
    restart: always
    networks:
      - fitness-club-net-prod
    expose:
      - "2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - zookeeper-data-prod:/bitnami/zookeeper

  kafka-prod:
    image: bitnami/kafka:3.3.1
    container_name: kafka-prod
    restart: always
    networks:
      - fitness-club-net-prod
    expose:
      - "9092"
    depends_on:
      - zookeeper-prod
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: DOCKER://:29092,HOST://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: DOCKER://kafka:29092,HOST://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_DELETE_TOPIC_ENABLE: true
    volumes:
      - kafka-data-prod:/bitnami/kafka

  kowl-prod:
    image: quay.io/cloudhut/kowl:master-59f68da
    container_name: kowl-prod
    restart: always
    networks:
      - fitness-club-net-prod
    ports:
      - "9000:9000"
    depends_on:
      - kafka-prod
    environment:
      KAFKA_BROKERS: kafka:29092
      SERVER_LISTENPORT: 9000

  redis-prod:
    container_name: redis-prod
    image: redis:6-alpine
    restart: always
    networks:
      - fitness-club-net-prod
    ports:
      - "6379:6379"

  fitness-club-mongo-prod:
    image: mongo:6.0.2
    command: mongod --auth
    container_name: fitness-club-mongo-prod
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: user_db
    volumes:
      - fitness-club-mongo-data-prod:/data/db
    networks:
      - fitness-club-net-prod


volumes:
  postgres-data-prod:
  zookeeper-data-prod:
  kafka-data-prod:
  fitness-club-mongo-data-prod:

networks:
  fitness-club-net-prod: