apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:3.8.0
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc
  labels:
    app: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
  selector:
    app: zookeeper
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:3.3.1
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-svc.default.svc.cluster.local:2181"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: "DOCKER://:29092,HOST://:9092"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "DOCKER://kafka-svc.default.svc.cluster.local:29092,HOST://localhost:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "DOCKER:PLAINTEXT,HOST:PLAINTEXT"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "DOCKER"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
              value: "true"
          volumeMounts:
            - name: kafka-pv-volume
              mountPath: /bitnami/kafka
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      volumes:
        - name: kafka-pv-volume
          persistentVolumeClaim:
            claimName: kafka-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    name: kafka-svc
spec:
  ports:
    - port: 9092
      name: localhost-port
      protocol: TCP
    - port: 29092
      name: external-port
      protocol: TCP
  selector:
    app: kafka
  type: LoadBalancer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 300Mi